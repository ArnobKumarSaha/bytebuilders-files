apiVersion: kubedb.com/v1alpha2
kind: MongoDB
metadata:
  name: standalone
  namespace: demo
spec:
  podTemplate:
    spec:
      volumeMounts:
      - name: users
        mountPath: /users
      volumes:
      - name: users
        secret:
          secretName: user-info
  init:
    script:
      configMap:
        name: mg-init-script
  allowedSchemas:
    namespaces:
      from: Selector
      selector:
        matchExpressions:
        - {key: kubernetes.io/metadata.name, operator: In, values: [dev]}
    selector:
      matchLabels:
        "schema.kubedb.com": "mongo"
  version: "6.0.5"
  terminationPolicy: WipeOut
  # replicas: 3
  # replicaSet:
  #   name: "rs"
  # authSecret:
  #   name: mg-auth-secret
  #   externallyManaged: true
  # podTemplate:
    # spec:
      # containerSecurityContext:
  #       allowPrivilegeEscalation: false
  #       capabilities:
  #         drop:
  #         - ALL
  #       # readOnlyRootFilesystem: true
  #       runAsNonRoot: true
  #       runAsUser: 999
        # seccompProfile:
        #   type: RuntimeDefault
  # coordinator:
    # securityContext:
  #     allowPrivilegeEscalation: false
  #     capabilities:
  #       drop:
  #       - ALL
  #     runAsNonRoot: true
      # seccompProfile:
      #   type: RuntimeDefault
  storage:
    # storageClassName: standard
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
  # serviceTemplates:
  # - alias: primary
  #   metadata: {}
  #   spec:
  #     ports:
  #     - name: db
  #       nodePort: 30001
  #       port: 27017
  #     type: LoadBalancer
  # hidden:
  #   podTemplate:
  #     spec:
  #       containerSecurityContext:
        #   allowPrivilegeEscalation: false
        #   capabilities:
        #     drop:
        #     - ALL
        #   runAsNonRoot: true
        #   runAsUser: 999
          # seccompProfile:
          #   type: RuntimeDefault
        # resources:
        #   requests:
        #     cpu: "400m"
        #     memory: "400Mi"
    # replicas: 1
    # storage:
    #   # storageClassName: "longhorn"
    #   accessModes:
    #     - ReadWriteOnce
    #   resources:
    #     requests:
    #       storage: 2Gi
  # arbiter: 
  #   podTemplate:
  #     spec:
  #       containerSecurityContext:
    #       allowPrivilegeEscalation: false
    #       capabilities:
    #         drop:
    #         - ALL
    #       runAsNonRoot: true
    #       runAsUser: 999
          # seccompProfile:
          #   type: RuntimeDefault
  # configSecret:
  #   name: mg-configuration
  # sslMode: preferSSL
  # tls:
  #   issuerRef:
  #     apiGroup: "cert-manager.io"
  #     kind: Issuer
  #     name: mongo-ca-issuer
  # clusterAuthMode: x509
  # monitor:
  #   agent: prometheus.io/operator
  #   prometheus:
  #     serviceMonitor:
  #       labels:
  #         release: prometheus
  #       interval: 10s
  # monitor:
  #   # agent: prometheus.io/builtin
  #   agent: prometheus.io/operator
  #   prometheus:
  #     serviceMonitor:
  #       labels:
  #         release: prometheus
  #     exporter:
  #       args: ["--compatible-mode"]
  #       securityContext:
  #   #       allowPrivilegeEscalation: false
  #   #       capabilities:
  #   #         drop:
  #   #         - ALL
  #   #       runAsNonRoot: true
  #   #       runAsUser: 999
  #         seccompProfile:
  #           type: RuntimeDefault


# sudo apt-get install -y 
# mongodb-org=<version> 
# mongodb-org-database=<version> 
# mongodb-org-server=<version> 
# mongodb-org-shell=<version> 
# mongodb-org-mongos=<version> 
# mongodb-org-tools=<version>
