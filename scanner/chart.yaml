---
# Source: scanner/templates/workspace.yaml
apiVersion: v1
kind: Namespace
metadata:
  labels:
    pod-security.kubernetes.io/enforce: baseline
  name: scanner-workspace
---
# Source: scanner/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: scanner
  namespace: kubeops
  labels:
    helm.sh/chart: scanner-v2023.10.1
    app.kubernetes.io/name: scanner
    app.kubernetes.io/instance: scanner
    app.kubernetes.io/version: "v0.0.13"
    app.kubernetes.io/managed-by: Helm
---
# Source: scanner/templates/apiregistration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: scanner-apiserver-cert
  namespace: kubeops
  labels:
    helm.sh/chart: scanner-v2023.10.1
    app.kubernetes.io/name: scanner
    app.kubernetes.io/instance: scanner
    app.kubernetes.io/version: "v0.0.13"
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  ca.crt: <>
  tls.crt: <>
  tls.key: <>
---
# Source: scanner/templates/etcd-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: scanner-etcd-cert
  namespace: kubeops
  labels:
    helm.sh/chart: scanner-v2023.10.1
    app.kubernetes.io/name: scanner
    app.kubernetes.io/instance: scanner
    app.kubernetes.io/version: "v0.0.13"
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  ca.crt: <>
  tls.crt: <>
  tls.key: <>
---
# Source: scanner/templates/nats-cred.yaml
apiVersion: v1
kind: Secret
metadata:
  name: scanner-nats-cred
  namespace: kubeops
  labels:
    helm.sh/chart: scanner-v2023.10.1
    app.kubernetes.io/name: scanner
    app.kubernetes.io/instance: scanner
    app.kubernetes.io/version: "v0.0.13"
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  username: "admin"
  password: <>
---
# Source: scanner/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: scanner
  labels:
    helm.sh/chart: scanner-v2023.10.1
    app.kubernetes.io/name: scanner
    app.kubernetes.io/instance: scanner
    app.kubernetes.io/version: "v0.0.13"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - scanner.appscode.com
  resources:
  - "*"
  verbs: ["*"]
# Get cluster id
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get"]
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - statefulsets
  verbs: ["get", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - replicationcontrollers
  verbs: ["get", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["get", "list", "watch", "create", "delete"]
- apiGroups:
  - ""
  resources:
  - nodes
  verbs: ["get", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - secrets
  - serviceaccounts
  verbs: ["get", "list", "watch"]
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  verbs: ["get", "list", "watch", "create", "patch", "delete"]
# allow file server paths
- nonResourceURLs: ["/files", "/files/*"]
  verbs: ["get", "post"]
---
# Source: scanner/templates/scanner-job-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: scanner-job
  labels:
    helm.sh/chart: scanner-v2023.10.1
    app.kubernetes.io/name: scanner
    app.kubernetes.io/instance: scanner
    app.kubernetes.io/version: "v0.0.13"
    app.kubernetes.io/managed-by: Helm
rules:
- nonResourceURLs:
  - /files/trivy/db.tar.gz
  - /files/trivy/javadb.tar.gz
  - /files/trivy/metadata.json
  verbs: ["get"]
- apiGroups:
  - scanner.appscode.com
  resources:
  - imagescanreports
  - vulnerabilities
  verbs: ["get", "create", "patch"]
- apiGroups:
  - scanner.appscode.com
  resources:
  - imagescanreports/status
  verbs: ["patch"]
---
# Source: scanner/templates/apiregistration.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: scanner-apiserver-auth-delegator
  labels:
    helm.sh/chart: scanner-v2023.10.1
    app.kubernetes.io/name: scanner
    app.kubernetes.io/instance: scanner
    app.kubernetes.io/version: "v0.0.13"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: scanner
  namespace: kubeops
---
# Source: scanner/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: scanner
  labels:
    helm.sh/chart: scanner-v2023.10.1
    app.kubernetes.io/name: scanner
    app.kubernetes.io/instance: scanner
    app.kubernetes.io/version: "v0.0.13"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: scanner
subjects:
- kind: ServiceAccount
  name: scanner
  namespace: kubeops
---
# Source: scanner/templates/license-checker-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: scanner-license-checker
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-checker
subjects:
- kind: ServiceAccount
  name: scanner
  namespace: kubeops
---
# Source: scanner/templates/license-reader-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: scanner-license-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-reader
subjects:
- kind: ServiceAccount
  name: scanner
  namespace: kubeops
---
# Source: scanner/templates/scanner-job-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: scanner-job
  labels:
    helm.sh/chart: scanner-v2023.10.1
    app.kubernetes.io/name: scanner
    app.kubernetes.io/instance: scanner
    app.kubernetes.io/version: "v0.0.13"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: scanner-job
subjects:
- kind: Group
  name: system:serviceaccounts
  apiGroup: rbac.authorization.k8s.io
---
# Source: scanner/templates/workspace.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: scanner
  namespace: scanner-workspace
  labels:
    helm.sh/chart: scanner-v2023.10.1
    app.kubernetes.io/name: scanner
    app.kubernetes.io/instance: scanner
    app.kubernetes.io/version: "v0.0.13"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - serviceaccounts
  verbs: ["create", "delete"]
---
# Source: scanner/templates/apiregistration.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: scanner-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    helm.sh/chart: scanner-v2023.10.1
    app.kubernetes.io/name: scanner
    app.kubernetes.io/instance: scanner
    app.kubernetes.io/version: "v0.0.13"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: scanner
  namespace: kubeops
---
# Source: scanner/templates/workspace.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: scanner
  namespace: scanner-workspace
  labels:
    helm.sh/chart: scanner-v2023.10.1
    app.kubernetes.io/name: scanner
    app.kubernetes.io/instance: scanner
    app.kubernetes.io/version: "v0.0.13"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: scanner
subjects:
- kind: ServiceAccount
  name: scanner
  namespace: kubeops
---
# Source: scanner/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: scanner
  namespace: kubeops
  labels:
    helm.sh/chart: scanner-v2023.10.1
    app.kubernetes.io/name: scanner
    app.kubernetes.io/instance: scanner
    app.kubernetes.io/version: "v0.0.13"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  # Port used to expose admission webhook apiserver
  - name: api
    port: 443
    targetPort: 8443
  - name: telemetry
    port: 8080
    targetPort: 8080
  selector:
    app.kubernetes.io/name: scanner
    app.kubernetes.io/instance: scanner
---
# Source: scanner/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: scanner-pods
  namespace: kubeops
  labels:
    helm.sh/chart: scanner-v2023.10.1
    app.kubernetes.io/name: scanner
    app.kubernetes.io/instance: scanner
    app.kubernetes.io/version: "v0.0.13"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  # port needed to create SRV records, SRV records have pod DNS name
  - name: client
    port: 2379
    targetPort: 2379
  - name: telemetry
    port: 2381
    targetPort: 2381
  # for headless service
  clusterIP: None
  # selector needed to create pods dns name
  selector:
    app.kubernetes.io/name: scanner
    app.kubernetes.io/instance: scanner
---
# Source: scanner/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: scanner
  namespace: kubeops
  labels:
    helm.sh/chart: scanner-v2023.10.1
    app.kubernetes.io/name: scanner
    app.kubernetes.io/instance: scanner
    app.kubernetes.io/version: "v0.0.13"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  serviceName: scanner-pods
  selector:
    matchLabels:
      app.kubernetes.io/name: scanner
      app.kubernetes.io/instance: scanner
  template:
    metadata:
      labels:
        app.kubernetes.io/name: scanner
        app.kubernetes.io/instance: scanner
      annotations:
        checksum/apiregistration.yaml: 8489c2639e0ec13e22f5cdca5a5c6ac75a947e6520a2320789a267408762ab16
    spec:
      
      serviceAccountName: scanner
      initContainers:
      - name: init-db
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        image: rancher/kine:v0.10.2
        imagePullPolicy: IfNotPresent
        command:
        - sh
        - -c
        - 'test -f /var/data/db.sqlite || touch /var/data/db.sqlite'
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - mountPath: /var/data
          name: storage
      containers:
      - name: app
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        # image: ghcr.io/appscode/scanner:v0.0.14-1-gc991a65-dirty_linux_amd64
        image: arnobkumarsaha/scanner:v0.0.14-1-gc991a65-dirty_linux_amd64
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --use-kubeapiserver-fqdn-for-aks=true
        - --etcd-servers=https://127.0.0.1:2379
        - --etcd-cafile=/etc/pki/etcd/ca.crt
        - --etcd-certfile=/etc/pki/etcd/tls.crt
        - --etcd-keyfile=/etc/pki/etcd/tls.key
        # - --scanner-image=ghcr.io/appscode/scanner:v0.0.14-1-gc991a65-dirty_linux_amd64
        - --scanner-image=arnobkumarsaha/scanner:v0.0.14-1-gc991a65-dirty_linux_amd64
        - --scan-request-ttl-after-finished=2h0m0s
        - --scan-report-ttl-after-outdated=168h0m0s
        - --workspace-namespace=scanner-workspace
        # - --trivydb-cacher-image=ghcr.io/appscode/trivydb:0.0.2
        - --trivydb-cacher-image=arnobkumarsaha/trivydb:test
        - --file-server-addr=https://scanner.kubeops.svc
        - --scan-public-image-incluster=false
        - --nats-addr=nats://this-is-nats.appscode.ninja:4222
        ports:
        - containerPort: 8443
        - containerPort: 8080
        env:
        - name: NATS_USERNAME
          valueFrom:
            secretKeyRef:
              name: scanner-nats-cred
              key: username
        - name: NATS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: scanner-nats-cred
              key: password
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          {}
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
        - mountPath: /etc/pki/etcd
          name: etcd-cert
        - mountPath: /var/data
          name: storage
        - mountPath: /tmp
          name: tmp
      - name: kine
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        image: rancher/kine:v0.10.2
        imagePullPolicy: IfNotPresent
        args:
        - --endpoint=sqlite:///var/data/db.sqlite
        - --metrics-bind-address=:2381
        - --server-cert-file=/etc/pki/etcd/tls.crt
        - --server-key-file=/etc/pki/etcd/tls.key
        ports:
        - containerPort: 2379
        - containerPort: 2381
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - mountPath: /etc/pki/etcd
          name: etcd-cert
        - mountPath: /var/data
          name: storage
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: scanner-apiserver-cert
      - name: etcd-cert
        secret:
          defaultMode: 420
          secretName: scanner-etcd-cert
      - name: tmp
        emptyDir: {}
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/os: linux
  volumeClaimTemplates:
  - metadata:
      name: storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
---
# Source: scanner/templates/cacher-cronjob.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: scanner-trivydb-cacher
  namespace: kubeops
  labels:
    helm.sh/chart: scanner-v2023.10.1
    app.kubernetes.io/name: scanner
    app.kubernetes.io/instance: scanner
    app.kubernetes.io/version: "v0.0.13"
    app.kubernetes.io/managed-by: Helm
spec:
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 2
      ttlSecondsAfterFinished: 120
      template:
        spec:
          
          serviceAccountName: scanner
          automountServiceAccountToken: true
          containers:
          - name: cacher
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              runAsUser: 65534
              seccompProfile:
                type: RuntimeDefault
            # image: ghcr.io/appscode/trivydb:0.0.2
            image: arnobkumarsaha/trivydb:test
            imagePullPolicy: IfNotPresent
            workingDir: /tmp
            command:
            - /scripts/update-trivydb.sh
            env:
            - name: FILESERVER_ADDR
              value: https://scanner.kubeops.svc
            resources:
              {}
            volumeMounts:
            - mountPath: /var/serving-cert
              name: serving-cert
            - mountPath: /tmp
              name: tmp
          restartPolicy: Never # OnFailure
          volumes:
          - name: serving-cert
            secret:
              defaultMode: 420
              secretName: scanner-apiserver-cert
          - name: tmp
            emptyDir: {}
  schedule: "0 */6 * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  suspend: false
---
# Source: scanner/templates/apiregistration.yaml
# register as aggregated apiserver
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.scanner.appscode.com
  labels:
    helm.sh/chart: scanner-v2023.10.1
    app.kubernetes.io/name: scanner
    app.kubernetes.io/instance: scanner
    app.kubernetes.io/version: "v0.0.13"
    app.kubernetes.io/managed-by: Helm
spec:
  group: scanner.appscode.com
  version: v1alpha1
  service:
    namespace: kubeops
    name: scanner
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQUtTWFpPT25lOFlYRENnV21Vb3FSYVV3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpNeE1EQTNNRGN4TkRJMldoY05Nek14TURBME1EY3hOREkyV2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTlF3CitEL09KRkFWcG41NzJFN0pxdE40WnAyZk5mNkYwVm5VV05xNU5LblpUdVRIUkF1eDlYQW5tK3YzRUszdFVyRnkKbTZ2SUZ2TVZSMHVPaDBRSDdib25Rc200UjlzMmhiRmQ5SXNiVXBqNWlqb2x0THBjU0FOL0wxcGljNisvbHhFcApmODhRT2k5NTAwcWNzRHlndjBrQzNOZWVkeEYxMmQ3bGRJeVhGVTF0a25lSWdDN2FxenZiVHBRM0djZzdnQlJ1CnZJT0dXWkhIZ0RBS2J0a2tZbkFNSnFxOUQ5UTNBY2s2Tm95VGFBSWpNNkJuWXdyRmcwcm1rMzB6S1BtLyt1NUMKeFk2TmNNSnZIM05MRlhUeE1yVUI1UFBudkszUmdmeCt4Z1QzUWxoWHh5ZFdZcnNJRElOTVVpSTBoVVU4Z2FLRwp3ZjFmMEowOGd5SUxvWnBVbUVFQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJSc255dnhWaXJuU2ZDK1pkTmlTNUs3aEdIMG9EQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUF4TEtKSm9jLwprOHlaWm5CZDhEUDIxUGRNZTl1TEFsNzVHQm5LVTNpY05mYmlMek1ZTU5kTGJ2RVJBOG9ocUJraVRZVzNaNVVrCnlTWFREY0ErT3N1aVhmbElFeURQN1BteER2Nm1jWXRxWGVyRXJVY1dLZUtNWFp0NWlFeDE2RkNyd212TXlKZnkKZU9LSXJpTlNnbGlPT2lsVkN2djNoTHhCeHZCMTVyZ1hmcXFQMXEyaHVnY3JsU3p4NzFBRDZyaFpmTkhKdUxWOQp6VFQvbDZ0UGZNMkkvd3ptb3UxcmY0TUxpbm5pbkNRMXYrVlJkUXB3V0pDS1FHdjZ5eHFINC8rcU9TeTRReENkCnJnRmsySnBNaktqTmM2YndFR0V1WmxDQW95THhaRTdBWjZmQThzVmtxVU5yWWJueG1RL3U3RmgwSWNFN0tmb1UKVzlVTk1mdHcvTVRKSXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: scanner/templates/license.yaml
# if license file is provided, then create a secret for license
---
# Source: scanner/templates/dashboards.yaml
apiVersion: openviz.dev/v1alpha1
kind: GrafanaDashboard
metadata:
  name: ace-scanner-appcves
  namespace: kubeops
  labels:
    k8s.io/group: reports.scanner.appscode.com
    k8s.io/kind: CVEReport
    helm.sh/chart: scanner-v2023.10.1
    app.kubernetes.io/name: scanner
    app.kubernetes.io/instance: scanner
    app.kubernetes.io/version: "v0.0.13"
    app.kubernetes.io/managed-by: Helm
spec:
  model:
    annotations:
      list:
      - builtIn: 1
        datasource: -- Grafana --
        enable: true
        hide: true
        iconColor: rgba(0, 211, 255, 1)
        name: Annotations & Alerts
        target:
          limit: 100
          matchAny: false
          tags: []
          type: dashboard
        type: dashboard
    editable: true
    fiscalYearStartMonth: 0
    gnetId: null
    graphTooltip: 0
    iteration: 1693983086429
    links: []
    liveNow: true
    panels:
    - aliasColors:
        CRITICAL: '#ea3d2f'
        HIGH: '#f7ad2a'
        LOW: '#27b064'
        MEDIUM: '#0aafff'
        UNKNOWN: '#8f8f8f'
      bars: false
      dashLength: 10
      dashes: false
      datasource: ${datasource}
      description: 'Severity distribution of vulnerability occurrences under a workload '
      fill: 0
      fillGradient: 0
      gridPos:
        h: 18
        w: 12
        x: 0
        "y": 0
      hiddenSeries: false
      id: 2
      legend:
        avg: false
        current: false
        max: false
        min: false
        show: true
        total: false
        values: false
      lines: true
      linewidth: 2
      nullPointMode: "null"
      options:
        alertThreshold: true
      percentage: false
      pluginVersion: 7.5.5
      pointradius: 2
      points: false
      renderer: flot
      seriesOverrides: []
      spaceLength: 10
      stack: false
      steppedLine: false
      targets:
      - exemplar: true
        expr: sum by(severity) (scanner_appscode_com_image_cve_occurrence_total * on(image)
          group_left scanner_appscode_com_image_lineage{group="$group",kind="$kind",namespace="$ns",name="$name"})
        interval: ""
        legendFormat: '{{ severity }}'
        refId: A
      thresholds: []
      timeFrom: null
      timeRegions: []
      timeShift: null
      title: App CVE Occurance Total
      tooltip:
        shared: true
        sort: 0
        value_type: individual
      type: graph
      xaxis:
        buckets: null
        mode: time
        name: null
        show: true
        values: []
      yaxes:
      - format: short
        label: null
        logBase: 1
        max: null
        min: null
        show: true
      - format: short
        label: null
        logBase: 1
        max: null
        min: null
        show: true
      yaxis:
        align: false
        alignLevel: null
    - aliasColors:
        CRITICAL: '#ea3d2f'
        HIGH: '#f7ad2a'
        LOW: '#27b064'
        MEDIUM: '#0aafff'
        UNKNOWN: '#8f8f8f'
      bars: false
      dashLength: 10
      dashes: false
      datasource: ${datasource}
      description: 'Severity distribution of unique vulnerabilities under a workload '
      fill: 0
      fillGradient: 0
      gridPos:
        h: 18
        w: 12
        x: 12
        "y": 0
      hiddenSeries: false
      id: 4
      legend:
        avg: false
        current: false
        max: false
        min: false
        show: true
        total: false
        values: false
      lines: true
      linewidth: 2
      nullPointMode: "null"
      options:
        alertThreshold: true
      percentage: false
      pluginVersion: 7.5.5
      pointradius: 2
      points: false
      renderer: flot
      seriesOverrides: []
      spaceLength: 10
      stack: false
      steppedLine: false
      targets:
      - exemplar: true
        expr: sum by(severity) (scanner_appscode_com_image_cve_count_total * on(image)
          group_left scanner_appscode_com_image_lineage{group="$group",kind="$kind",namespace="$ns",name="$name"})
        interval: ""
        legendFormat: '{{ severity }}'
        refId: A
      thresholds: []
      timeFrom: null
      timeRegions: []
      timeShift: null
      title: App CVE Count Total
      tooltip:
        shared: true
        sort: 0
        value_type: individual
      type: graph
      xaxis:
        buckets: null
        mode: time
        name: null
        show: true
        values: []
      yaxes:
      - format: short
        label: null
        logBase: 1
        max: null
        min: null
        show: true
      - format: short
        label: null
        logBase: 1
        max: null
        min: null
        show: true
      yaxis:
        align: false
        alignLevel: null
    schemaVersion: 31
    style: dark
    tags: []
    templating:
      list:
      - current:
          selected: false
          text: Prometheus
          value: Prometheus
        description: null
        error: null
        hide: 0
        includeAll: false
        label: datasource
        multi: false
        name: datasource
        options: []
        query: prometheus
        queryValue: ""
        refresh: 1
        regex: ""
        skipUrlSync: false
        type: datasource
      - allValue: null
        current:
          isNone: true
          selected: false
          text: None
          value: ""
        datasource: ${datasource}
        definition: label_values(apiserver_request_total{},group)
        description: null
        error: null
        hide: 0
        includeAll: false
        label: group
        multi: false
        name: group
        options: []
        query:
          query: label_values(apiserver_request_total{},group)
          refId: StandardVariableQuery
        refresh: 1
        regex: ""
        skipUrlSync: false
        sort: 0
        tagValuesQuery: ""
        tagsQuery: ""
        type: query
        useTags: false
      - allValue: null
        current:
          selected: true
          text: MongoDB
          value: MongoDB
        datasource: ${datasource}
        definition: label_values(apiserver_watch_events_total{group=~"$group"},kind)
        description: null
        error: null
        hide: 0
        includeAll: false
        label: kind
        multi: false
        name: kind
        options: []
        query:
          query: label_values(apiserver_watch_events_total{group=~"$group"},kind)
          refId: StandardVariableQuery
        refresh: 1
        regex: ""
        skipUrlSync: false
        sort: 0
        tagValuesQuery: ""
        tagsQuery: ""
        type: query
        useTags: false
      - allValue: null
        current:
          selected: true
          text: demo
          value: demo
        datasource: ${datasource}
        definition: label_values(kube_namespace_created{},namespace)
        description: null
        error: null
        hide: 0
        includeAll: false
        label: ns
        multi: false
        name: ns
        options: []
        query:
          query: label_values(kube_namespace_created{},namespace)
          refId: StandardVariableQuery
        refresh: 1
        regex: ""
        skipUrlSync: false
        sort: 0
        tagValuesQuery: ""
        tagsQuery: ""
        type: query
        useTags: false
      - allValue: null
        current:
          selected: true
          text: mg
          value: mg
        datasource: ${datasource}
        definition: label_values(scanner_appscode_com_image_lineage{group=~"$group",kind=~"$kind",namespace=~"$ns"},name)
        description: null
        error: null
        hide: 0
        includeAll: false
        label: name
        multi: false
        name: name
        options: []
        query:
          query: label_values(scanner_appscode_com_image_lineage{group=~"$group",kind=~"$kind",namespace=~"$ns"},name)
          refId: StandardVariableQuery
        refresh: 1
        regex: ""
        skipUrlSync: false
        sort: 0
        tagValuesQuery: ""
        tagsQuery: ""
        type: query
        useTags: false
    time:
      from: now-24h
      to: now
    timepicker: {}
    timezone: ""
    title: ACE / Scanner / App CVEs
    version: 2
  overwrite: true
  templatize:
    title: false
    datasource: false
---
# Source: scanner/templates/dashboards.yaml
apiVersion: openviz.dev/v1alpha1
kind: GrafanaDashboard
metadata:
  name: ace-scanner-clustercves
  namespace: kubeops
  labels:
    k8s.io/group: reports.scanner.appscode.com
    k8s.io/kind: CVEReport
    helm.sh/chart: scanner-v2023.10.1
    app.kubernetes.io/name: scanner
    app.kubernetes.io/instance: scanner
    app.kubernetes.io/version: "v0.0.13"
    app.kubernetes.io/managed-by: Helm
spec:
  model:
    annotations:
      list:
      - builtIn: 1
        datasource: -- Grafana --
        enable: true
        hide: true
        iconColor: rgba(0, 211, 255, 1)
        name: Annotations & Alerts
        target:
          limit: 100
          matchAny: false
          tags: []
          type: dashboard
        type: dashboard
    editable: true
    fiscalYearStartMonth: 0
    gnetId: null
    graphTooltip: 0
    links: []
    liveNow: true
    panels:
    - aliasColors:
        CRITICAL: '#ea3d2f'
        HIGH: '#f7ad2a'
        LOW: '#27b064'
        MEDIUM: '#0aafff'
        UNKNOWN: '#8f8f8f'
      bars: false
      dashLength: 10
      dashes: false
      datasource: ${datasource}
      description: Number of vulnerability occurrences in cluster scope
      fill: 0
      fillGradient: 0
      gridPos:
        h: 17
        w: 12
        x: 0
        "y": 0
      hiddenSeries: false
      id: 2
      legend:
        avg: false
        current: false
        max: false
        min: false
        show: true
        total: false
        values: false
      lines: true
      linewidth: 2
      nullPointMode: "null"
      options:
        alertThreshold: true
      percentage: false
      pluginVersion: 7.5.5
      pointradius: 2
      points: false
      renderer: flot
      seriesOverrides: []
      spaceLength: 10
      stack: false
      steppedLine: false
      targets:
      - exemplar: true
        expr: sum by (job, severity) (scanner_appscode_com_cluster_cve_occurrence_total)
        interval: ""
        legendFormat: '{{severity}}'
        refId: A
      thresholds: []
      timeFrom: null
      timeRegions: []
      timeShift: null
      title: Cluster CVE Occurance Total
      tooltip:
        shared: true
        sort: 0
        value_type: individual
      type: graph
      xaxis:
        buckets: null
        mode: time
        name: null
        show: true
        values: []
      yaxes:
      - format: short
        label: null
        logBase: 1
        max: null
        min: null
        show: true
      - format: short
        label: null
        logBase: 1
        max: null
        min: null
        show: true
      yaxis:
        align: false
        alignLevel: null
    - aliasColors:
        CRITICAL: '#ea3d2f'
        HIGH: '#f7ad2a'
        LOW: '#27b064'
        MEDIUM: '#0aafff'
        UNKNOWN: '#8f8f8f'
      bars: false
      dashLength: 10
      dashes: false
      datasource: ${datasource}
      description: Number of unique vulnerabilites in cluster scope
      fill: 0
      fillGradient: 0
      gridPos:
        h: 17
        w: 12
        x: 12
        "y": 0
      hiddenSeries: false
      id: 4
      legend:
        avg: false
        current: false
        max: false
        min: false
        show: true
        total: false
        values: false
      lines: true
      linewidth: 2
      nullPointMode: "null"
      options:
        alertThreshold: true
      percentage: false
      pluginVersion: 7.5.5
      pointradius: 2
      points: false
      renderer: flot
      seriesOverrides: []
      spaceLength: 10
      stack: false
      steppedLine: false
      targets:
      - exemplar: true
        expr: sum by (job, severity) (scanner_appscode_com_cluster_cve_count_total)
        interval: ""
        legendFormat: '{{severity}}'
        refId: A
      thresholds: []
      timeFrom: null
      timeRegions: []
      timeShift: null
      title: Cluster CVE Count Total
      tooltip:
        shared: true
        sort: 0
        value_type: individual
      type: graph
      xaxis:
        buckets: null
        mode: time
        name: null
        show: true
        values: []
      yaxes:
      - format: short
        label: null
        logBase: 1
        max: null
        min: null
        show: true
      - format: short
        label: null
        logBase: 1
        max: null
        min: null
        show: true
      yaxis:
        align: false
        alignLevel: null
    schemaVersion: 31
    style: dark
    tags: []
    templating:
      list:
      - current:
          selected: false
          text: Prometheus
          value: Prometheus
        description: null
        error: null
        hide: 0
        includeAll: false
        label: datasource
        multi: false
        name: datasource
        options: []
        query: prometheus
        queryValue: ""
        refresh: 1
        regex: ""
        skipUrlSync: false
        type: datasource
    time:
      from: now-24h
      to: now
    timepicker: {}
    timezone: ""
    title: ACE / Scanner / Cluster CVEs
    version: 2
  overwrite: true
  templatize:
    title: false
    datasource: false
---
# Source: scanner/templates/dashboards.yaml
apiVersion: openviz.dev/v1alpha1
kind: GrafanaDashboard
metadata:
  name: ace-scanner-cvereport
  namespace: kubeops
  labels:
    k8s.io/group: reports.scanner.appscode.com
    k8s.io/kind: CVEReport
    helm.sh/chart: scanner-v2023.10.1
    app.kubernetes.io/name: scanner
    app.kubernetes.io/instance: scanner
    app.kubernetes.io/version: "v0.0.13"
    app.kubernetes.io/managed-by: Helm
spec:
  model:
    annotations:
      list:
      - builtIn: 1
        datasource: -- Grafana --
        enable: true
        hide: true
        iconColor: rgba(0, 211, 255, 1)
        name: Annotations & Alerts
        type: dashboard
    editable: true
    gnetId: null
    graphTooltip: 0
    iteration: 1673340937342
    links: []
    panels:
    - aliasColors:
        CRITICAL: '#ea3d2f'
        HIGH: '#f7ad2a'
        LOW: '#27b064'
        MEDIUM: '#0aafff'
        UNKNOWN: '#8f8f8f'
      bars: false
      dashLength: 10
      dashes: false
      datasource: ${datasource}
      description: Cluster level occurrences of a perticular CVE
      fieldConfig:
        defaults: {}
        overrides: []
      fill: 0
      fillGradient: 0
      gridPos:
        h: 17
        w: 12
        x: 0
        "y": 0
      hiddenSeries: false
      id: 2
      legend:
        avg: false
        current: false
        max: false
        min: false
        show: true
        total: false
        values: false
      lines: true
      linewidth: 2
      nullPointMode: "null"
      options:
        alertThreshold: true
      percentage: false
      pluginVersion: 7.5.5
      pointradius: 2
      points: false
      renderer: flot
      seriesOverrides: []
      spaceLength: 10
      stack: false
      steppedLine: false
      targets:
      - exemplar: true
        expr: sum by (cve) (scanner_appscode_com_cluster_cve_occurrence{cve="$cve"})
        interval: ""
        legendFormat: '{{ cve }}'
        refId: A
      thresholds: []
      timeFrom: null
      timeRegions: []
      timeShift: null
      title: CVE occurrence in cluster
      tooltip:
        shared: true
        sort: 0
        value_type: individual
      type: graph
      xaxis:
        buckets: null
        mode: time
        name: null
        show: true
        values: []
      yaxes:
      - format: short
        label: null
        logBase: 1
        max: null
        min: null
        show: true
      - format: short
        label: null
        logBase: 1
        max: null
        min: null
        show: true
      yaxis:
        align: false
        alignLevel: null
    - aliasColors:
        CRITICAL: '#ea3d2f'
        HIGH: '#f7ad2a'
        LOW: '#27b064'
        MEDIUM: '#0aafff'
        UNKNOWN: '#8f8f8f'
      bars: false
      dashLength: 10
      dashes: false
      datasource: ${datasource}
      description: Namespace level occurrences of a particular CVE
      fieldConfig:
        defaults: {}
        overrides: []
      fill: 0
      fillGradient: 0
      gridPos:
        h: 17
        w: 12
        x: 12
        "y": 0
      hiddenSeries: false
      id: 4
      legend:
        avg: false
        current: false
        max: false
        min: false
        show: true
        total: false
        values: false
      lines: true
      linewidth: 2
      nullPointMode: "null"
      options:
        alertThreshold: true
      percentage: false
      pluginVersion: 7.5.5
      pointradius: 2
      points: false
      renderer: flot
      seriesOverrides: []
      spaceLength: 10
      stack: false
      steppedLine: false
      targets:
      - exemplar: true
        expr: sum by(namespace) (scanner_appscode_com_namespace_cve_occurrence{cve="$cve"})
        interval: ""
        legendFormat: '{{ cve }}'
        refId: A
      thresholds: []
      timeFrom: null
      timeRegions: []
      timeShift: null
      title: CVE occurrence in Namespace
      tooltip:
        shared: true
        sort: 0
        value_type: individual
      type: graph
      xaxis:
        buckets: null
        mode: time
        name: null
        show: true
        values: []
      yaxes:
      - format: short
        label: null
        logBase: 1
        max: null
        min: null
        show: true
      - format: short
        label: null
        logBase: 1
        max: null
        min: null
        show: true
      yaxis:
        align: false
        alignLevel: null
    schemaVersion: 27
    style: dark
    tags: []
    templating:
      list:
      - current:
          selected: false
          text: Prometheus
          value: Prometheus
        description: null
        error: null
        hide: 0
        includeAll: false
        label: datasource
        multi: false
        name: datasource
        options: []
        query: prometheus
        queryValue: ""
        refresh: 1
        regex: ""
        skipUrlSync: false
        type: datasource
      - allValue: null
        current:
          isNone: true
          selected: false
          text: None
          value: ""
        datasource: ${datasource}
        definition: label_values(scanner_appscode_com_cluster_cve_occurrence{},cve)
        description: null
        error: null
        hide: 0
        includeAll: false
        label: cve
        multi: false
        name: cve
        options: []
        query:
          query: label_values(scanner_appscode_com_cluster_cve_occurrence{},cve)
          refId: StandardVariableQuery
        refresh: 1
        regex: ""
        skipUrlSync: false
        sort: 0
        tagValuesQuery: ""
        tags: []
        tagsQuery: ""
        type: query
        useTags: false
    time:
      from: now-24h
      to: now
    timepicker: {}
    timezone: ""
    title: ACE / Scanner / CVE Report
    version: 1
  overwrite: true
  templatize:
    title: false
    datasource: false
---
# Source: scanner/templates/dashboards.yaml
apiVersion: openviz.dev/v1alpha1
kind: GrafanaDashboard
metadata:
  name: ace-scanner-imagecves
  namespace: kubeops
  labels:
    k8s.io/group: reports.scanner.appscode.com
    k8s.io/kind: CVEReport
    helm.sh/chart: scanner-v2023.10.1
    app.kubernetes.io/name: scanner
    app.kubernetes.io/instance: scanner
    app.kubernetes.io/version: "v0.0.13"
    app.kubernetes.io/managed-by: Helm
spec:
  model:
    annotations:
      list:
      - builtIn: 1
        datasource: -- Grafana --
        enable: true
        hide: true
        iconColor: rgba(0, 211, 255, 1)
        name: Annotations & Alerts
        type: dashboard
    editable: true
    gnetId: null
    graphTooltip: 0
    iteration: 1673340860305
    links: []
    panels:
    - aliasColors:
        CRITICAL: '#ea3d2f'
        HIGH: '#f7ad2a'
        LOW: '#27b064'
        MEDIUM: '#0aafff'
        UNKNOWN: '#8f8f8f'
      bars: false
      dashLength: 10
      dashes: false
      datasource: ${datasource}
      description: Severity distribution of total number of vulnerabilities for an image
      fieldConfig:
        defaults: {}
        overrides: []
      fill: 0
      fillGradient: 0
      gridPos:
        h: 18
        w: 12
        x: 0
        "y": 0
      hiddenSeries: false
      id: 2
      legend:
        avg: false
        current: false
        max: false
        min: false
        show: true
        total: false
        values: false
      lines: true
      linewidth: 2
      nullPointMode: "null"
      options:
        alertThreshold: true
      percentage: false
      pluginVersion: 7.5.5
      pointradius: 2
      points: false
      renderer: flot
      seriesOverrides: []
      spaceLength: 10
      stack: false
      steppedLine: false
      targets:
      - exemplar: true
        expr: sum by (severity) (scanner_appscode_com_image_cve_occurrence_total{image="$img"})
        interval: ""
        legendFormat: '{{severity}}'
        refId: A
      thresholds: []
      timeFrom: null
      timeRegions: []
      timeShift: null
      title: Image CVE Occurance Total
      tooltip:
        shared: true
        sort: 0
        value_type: individual
      type: graph
      xaxis:
        buckets: null
        mode: time
        name: null
        show: true
        values: []
      yaxes:
      - format: short
        label: null
        logBase: 1
        max: null
        min: null
        show: true
      - format: short
        label: null
        logBase: 1
        max: null
        min: null
        show: true
      yaxis:
        align: false
        alignLevel: null
    - aliasColors:
        CRITICAL: '#ea3d2f'
        HIGH: '#f7ad2a'
        LOW: '#27b064'
        MEDIUM: '#0aafff'
        UNKNOWN: '#8f8f8f'
      bars: false
      dashLength: 10
      dashes: false
      datasource: ${datasource}
      description: Severity distribution of unique vulnerabilities for an image
      fieldConfig:
        defaults: {}
        overrides: []
      fill: 0
      fillGradient: 0
      gridPos:
        h: 18
        w: 12
        x: 12
        "y": 0
      hiddenSeries: false
      id: 4
      legend:
        avg: false
        current: false
        max: false
        min: false
        show: true
        total: false
        values: false
      lines: true
      linewidth: 2
      nullPointMode: "null"
      options:
        alertThreshold: true
      percentage: false
      pluginVersion: 7.5.5
      pointradius: 2
      points: false
      renderer: flot
      seriesOverrides: []
      spaceLength: 10
      stack: false
      steppedLine: false
      targets:
      - exemplar: true
        expr: sum by (severity) (scanner_appscode_com_image_cve_count_total{image="$img"})
        interval: ""
        legendFormat: '{{severity}}'
        refId: A
      thresholds: []
      timeFrom: null
      timeRegions: []
      timeShift: null
      title: Image CVE Count Total
      tooltip:
        shared: true
        sort: 0
        value_type: individual
      type: graph
      xaxis:
        buckets: null
        mode: time
        name: null
        show: true
        values: []
      yaxes:
      - format: short
        label: null
        logBase: 1
        max: null
        min: null
        show: true
      - format: short
        label: null
        logBase: 1
        max: null
        min: null
        show: true
      yaxis:
        align: false
        alignLevel: null
    schemaVersion: 27
    style: dark
    tags: []
    templating:
      list:
      - current:
          selected: false
          text: Prometheus
          value: Prometheus
        description: null
        error: null
        hide: 0
        includeAll: false
        label: datasource
        multi: false
        name: datasource
        options: []
        query: prometheus
        queryValue: ""
        refresh: 1
        regex: ""
        skipUrlSync: false
        type: datasource
      - allValue: null
        current:
          isNone: true
          selected: false
          text: None
          value: ""
        datasource: ${datasource}
        definition: label_values(scanner_appscode_com_image_cve_occurrence_total{},image)
        description: null
        error: null
        hide: 0
        includeAll: false
        label: img
        multi: false
        name: img
        options: []
        query:
          query: label_values(scanner_appscode_com_image_cve_occurrence_total{},image)
          refId: StandardVariableQuery
        refresh: 1
        regex: ""
        skipUrlSync: false
        sort: 0
        tagValuesQuery: ""
        tags: []
        tagsQuery: ""
        type: query
        useTags: false
    time:
      from: now-24h
      to: now
    timepicker: {}
    timezone: ""
    title: ACE / Scanner / Image CVEs
    version: 1
  overwrite: true
  templatize:
    title: false
    datasource: false
---
# Source: scanner/templates/dashboards.yaml
apiVersion: openviz.dev/v1alpha1
kind: GrafanaDashboard
metadata:
  name: ace-scanner-namespacecves
  namespace: kubeops
  labels:
    k8s.io/group: reports.scanner.appscode.com
    k8s.io/kind: CVEReport
    helm.sh/chart: scanner-v2023.10.1
    app.kubernetes.io/name: scanner
    app.kubernetes.io/instance: scanner
    app.kubernetes.io/version: "v0.0.13"
    app.kubernetes.io/managed-by: Helm
spec:
  model:
    annotations:
      list:
      - builtIn: 1
        datasource: -- Grafana --
        enable: true
        hide: true
        iconColor: rgba(0, 211, 255, 1)
        name: Annotations & Alerts
        target:
          limit: 100
          matchAny: false
          tags: []
          type: dashboard
        type: dashboard
    editable: true
    fiscalYearStartMonth: 0
    gnetId: null
    graphTooltip: 0
    iteration: 1693982769114
    links: []
    liveNow: true
    panels:
    - aliasColors:
        CRITICAL: '#ea3d2f'
        HIGH: '#f7ad2a'
        LOW: '#27b064'
        MEDIUM: '#0aafff'
        UNKNOWN: '#8f8f8f'
      bars: false
      dashLength: 10
      dashes: false
      datasource: ${datasource}
      description: Total number of vulnerabilities occurred in namespace scope
      fill: 0
      fillGradient: 0
      gridPos:
        h: 16
        w: 12
        x: 0
        "y": 0
      hiddenSeries: false
      id: 2
      legend:
        avg: false
        current: false
        max: false
        min: false
        show: true
        total: false
        values: false
      lines: true
      linewidth: 2
      nullPointMode: "null"
      options:
        alertThreshold: true
      percentage: false
      pluginVersion: 7.5.5
      pointradius: 2
      points: false
      renderer: flot
      seriesOverrides: []
      spaceLength: 10
      stack: false
      steppedLine: false
      targets:
      - exemplar: true
        expr: sum by (job, severity) (scanner_appscode_com_namespace_cve_occurrence_total{namespace="$ns"})
        interval: ""
        legendFormat: '{{severity}}'
        refId: A
      thresholds: []
      timeFrom: null
      timeRegions: []
      timeShift: null
      title: Namespace CVE Occurance Total
      tooltip:
        shared: true
        sort: 0
        value_type: individual
      type: graph
      xaxis:
        buckets: null
        mode: time
        name: null
        show: true
        values: []
      yaxes:
      - format: short
        label: null
        logBase: 1
        max: null
        min: null
        show: true
      - format: short
        label: null
        logBase: 1
        max: null
        min: null
        show: true
      yaxis:
        align: false
        alignLevel: null
    - aliasColors:
        CRITICAL: '#ea3d2f'
        HIGH: '#f7ad2a'
        LOW: '#27b064'
        MEDIUM: '#0aafff'
        UNKNOWN: '#8f8f8f'
      bars: false
      dashLength: 10
      dashes: false
      datasource: ${datasource}
      description: Number of unique vulnerabilities in namespace scope
      fill: 0
      fillGradient: 0
      gridPos:
        h: 16
        w: 12
        x: 12
        "y": 0
      hiddenSeries: false
      id: 4
      legend:
        avg: false
        current: false
        max: false
        min: false
        show: true
        total: false
        values: false
      lines: true
      linewidth: 2
      nullPointMode: "null"
      options:
        alertThreshold: true
      percentage: false
      pluginVersion: 7.5.5
      pointradius: 2
      points: false
      renderer: flot
      seriesOverrides: []
      spaceLength: 10
      stack: false
      steppedLine: false
      targets:
      - exemplar: true
        expr: sum by (job, severity) (scanner_appscode_com_namespace_cve_count_total{namespace="$ns"})
        interval: ""
        legendFormat: '{{severity}}'
        refId: A
      thresholds: []
      timeFrom: null
      timeRegions: []
      timeShift: null
      title: Namespace CVE Count Total
      tooltip:
        shared: true
        sort: 0
        value_type: individual
      type: graph
      xaxis:
        buckets: null
        mode: time
        name: null
        show: true
        values: []
      yaxes:
      - format: short
        label: null
        logBase: 1
        max: null
        min: null
        show: true
      - format: short
        label: null
        logBase: 1
        max: null
        min: null
        show: true
      yaxis:
        align: false
        alignLevel: null
    schemaVersion: 31
    style: dark
    tags: []
    templating:
      list:
      - current:
          selected: false
          text: Prometheus
          value: Prometheus
        description: null
        error: null
        hide: 0
        includeAll: false
        label: datasource
        multi: false
        name: datasource
        options: []
        query: prometheus
        queryValue: ""
        refresh: 1
        regex: ""
        skipUrlSync: false
        type: datasource
      - allValue: null
        current:
          isNone: true
          selected: false
          text: None
          value: ""
        datasource: ${datasource}
        definition: label_values(kube_namespace_created,namespace)
        description: null
        error: null
        hide: 0
        includeAll: false
        label: ns
        multi: false
        name: ns
        options: []
        query:
          query: label_values(kube_namespace_created,namespace)
          refId: StandardVariableQuery
        refresh: 1
        regex: ""
        skipUrlSync: false
        sort: 0
        tagValuesQuery: ""
        tagsQuery: ""
        type: query
        useTags: false
    time:
      from: now-24h
      to: now
    timepicker: {}
    timezone: ""
    title: ACE / Scanner / Namespace CVEs
    version: 2
  overwrite: true
  templatize:
    title: false
    datasource: false
---
# Source: scanner/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: scanner
  namespace: kubeops
  labels:
    app.kubernetes.io/name: scanner
    app.kubernetes.io/instance: scanner
spec:
  namespaceSelector:
    matchNames:
    - kubeops
  selector:
    matchLabels:
      app.kubernetes.io/name: scanner
      app.kubernetes.io/instance: scanner
  endpoints:
  - port: telemetry
    bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    scheme: http
    interval: 10s
    honorLabels: true
---
# Source: scanner/templates/license-checker-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-checker
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Get cluster id
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get"]
# Issue license
- apiGroups:
  - proxyserver.licenses.appscode.com
  resources:
  - licenserequests
  verbs: ["create"]
# Detect workload/owner of operator pod
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["get"]
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs: ["get"]
# Write events in case of license verification failure
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "list", "create", "patch"]
---
# Source: scanner/templates/license-reader-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-reader
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Detect license server endpoint for kubedb addons
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get"]
- nonResourceURLs:
  - /appscode/license
  verbs: ["get"]
---
# Source: scanner/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:scanner:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - scanner.appscode.com
  - reports.scanner.appscode.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: scanner/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:scanner:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - scanner.appscode.com
  - reports.scanner.appscode.com
  resources:
  - "*"
  verbs: ["create", "get", "list", "watch", "update", "patch"]
---
# Source: scanner/templates/user-roles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: appscode:scanner:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - scanner.appscode.com
  - reports.scanner.appscode.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: scanner/templates/cacher-init-job.yaml
apiVersion: batch/v1beta1
kind: Job
metadata:
  name: scanner-init-trivydb-cache
  namespace: kubeops
  labels:
    helm.sh/chart: scanner-v2023.10.1
    app.kubernetes.io/name: scanner
    app.kubernetes.io/instance: scanner
    app.kubernetes.io/version: "v0.0.13"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  backoffLimit: 3
  activeDeadlineSeconds: 120
  # ttlSecondsAfterFinished: 120
  template:
    spec:
      
      serviceAccountName: scanner
      automountServiceAccountToken: true
      containers:
      - name: starter
        # image: ghcr.io/appscode/trivydb:0.0.2
        image: arnobkumarsaha/trivydb:test
        command:
          - kubectl
          - create
          - job
          - --from=cronjob/scanner-trivydb-cacher
          - scanner-trivydb-cacher-mhwcmss1
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
      restartPolicy: Never
