---
# Source: falco/charts/falcosidekick/templates/rbac-ui.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: falco-falcosidekick-ui
  namespace: falco
  labels:
    app.kubernetes.io/name: falcosidekick-ui
    helm.sh/chart: falcosidekick-0.6.3
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
---
# Source: falco/charts/falcosidekick/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: falco-falcosidekick
  namespace: falco
  labels:
    app.kubernetes.io/name: falcosidekick
    helm.sh/chart: falcosidekick-0.6.3
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
---
# Source: falco/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: falco
  namespace: falco
  labels:
    helm.sh/chart: falco-3.6.0
    app.kubernetes.io/name: falco
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "0.35.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: falco/charts/falcosidekick/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: falco-falcosidekick
  namespace: falco
  labels:
    app.kubernetes.io/name: falcosidekick
    helm.sh/chart: falcosidekick-0.6.3
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  # Slack Output
  SLACK_WEBHOOKURL: ""
  SLACK_CHANNEL: ""
  SLACK_OUTPUTFORMAT: "YWxs"
  SLACK_FOOTER: ""
  SLACK_ICON: ""
  SLACK_USERNAME: ""
  SLACK_MINIMUMPRIORITY: ""
  SLACK_MESSAGEFORMAT: ""

  # RocketChat Output
  ROCKETCHAT_WEBHOOKURL: ""
  ROCKETCHAT_OUTPUTFORMAT: "YWxs"
  ROCKETCHAT_ICON: ""
  ROCKETCHAT_USERNAME: ""
  ROCKETCHAT_MINIMUMPRIORITY: ""
  ROCKETCHAT_MESSAGEFORMAT: ""
  ROCKETCHAT_MUTUALTLS: "ZmFsc2U="
  ROCKETCHAT_CHECKCERT: "dHJ1ZQ=="

  # Mattermost Output
  MATTERMOST_WEBHOOKURL: ""
  MATTERMOST_OUTPUTFORMAT: "YWxs"
  MATTERMOST_FOOTER: ""
  MATTERMOST_ICON: ""
  MATTERMOST_USERNAME: ""
  MATTERMOST_MINIMUMPRIORITY: ""
  MATTERMOST_MESSAGEFORMAT: ""
  MATTERMOST_MUTUALTLS: "ZmFsc2U="
  MATTERMOST_CHECKCERT: "dHJ1ZQ=="

  # Teams Output
  TEAMS_WEBHOOKURL: ""
  TEAMS_OUTPUTFORMAT: "YWxs"
  TEAMS_ACTIVITYIMAGE: ""
  TEAMS_MINIMUMPRIORITY: ""

  # Datadog Output
  DATADOG_APIKEY: ""
  DATADOG_HOST: ""
  DATADOG_MINIMUMPRIORITY: ""

  # AlertManager Output
  ALERTMANAGER_HOSTPORT: ""
  ALERTMANAGER_ENDPOINT: "L2FwaS92MS9hbGVydHM="
  ALERTMANAGER_EXPIRESAFTER: ""
  ALERTMANAGER_CUSTOMSEVERITYMAP: ""
  ALERTMANAGER_DROPEVENTDEFAULTPRIORITY: "Y3JpdGljYWw="
  ALERTMANAGER_DROPEVENTTHRESHOLDS: "MTAwMDA6Y3JpdGljYWwsIDEwMDA6Y3JpdGljYWwsIDEwMDpjcml0aWNhbCwgMTA6d2FybmluZywgMTp3YXJuaW5n"
  ALERTMANAGER_MINIMUMPRIORITY: ""
  ALERTMANAGER_MUTUALTLS: "ZmFsc2U="
  ALERTMANAGER_CHECKCERT: "dHJ1ZQ=="

  # InfluxDB Output
  INFLUXDB_USER: ""
  INFLUXDB_PASSWORD: ""
  INFLUXDB_TOKEN: ""
  INFLUXDB_HOSTPORT: ""
  INFLUXDB_ORGANIZATION: ""
  INFLUXDB_PRECISION: "bnM="
  INFLUXDB_MINIMUMPRIORITY: ""
  INFLUXDB_DATABASE: "ZmFsY28="
  INFLUXDB_MUTUALTLS: "ZmFsc2U="
  INFLUXDB_CHECKCERT: "dHJ1ZQ=="

  # AWS Output
  AWS_ACCESSKEYID: ""
  AWS_ROLEARN: ""
  AWS_EXTERNALID: ""
  AWS_SECRETACCESSKEY: ""
  AWS_REGION: ""
  AWS_CHECKIDENTITY: "dHJ1ZQ=="
  AWS_LAMBDA_FUNCTIONNAME: ""
  AWS_LAMBDA_MINIMUMPRIORITY: ""
  AWS_CLOUDWATCHLOGS_LOGGROUP: ""
  AWS_CLOUDWATCHLOGS_LOGSTREAM: ""
  AWS_CLOUDWATCHLOGS_MINIMUMPRIORITY: ""
  AWS_SNS_TOPICARN: ""
  AWS_SNS_RAWJSON: "ZmFsc2U="
  AWS_SNS_MINIMUMPRIORITY: ""
  AWS_SQS_URL: ""
  AWS_SQS_MINIMUMPRIORITY: ""
  AWS_S3_BUCKET: ""
  AWS_S3_PREFIX: ""
  AWS_S3_MINIMUMPRIORITY: ""
  AWS_KINESIS_STREAMNAME: ""
  AWS_KINESIS_MINIMUMPRIORITY: ""
  AWS_SECURITYLAKE_BUCKET: ""
  AWS_SECURITYLAKE_REGION: ""
  AWS_SECURITYLAKE_PREFIX: ""
  AWS_SECURITYLAKE_ACCOUNTID: ""
  AWS_SECURITYLAKE_INTERVAL: "NQ=="
  AWS_SECURITYLAKE_BATCHSIZE: "MTAwMA=="
  AWS_SECURITYLAKE_MINIMUMPRIORITY: ""

  # SMTP Output
  SMTP_USER: ""
  SMTP_PASSWORD: ""
  SMTP_AUTHMECHANISM: "cGxhaW4="
  SMTP_TLS: "dHJ1ZQ=="
  SMTP_HOSTPORT: ""
  SMTP_FROM: ""
  SMTP_TO: ""
  SMTP_TOKEN: ""
  SMTP_IDENTITY: ""
  SMTP_TRACE: ""
  SMTP_OUTPUTFORMAT: "aHRtbA=="
  SMTP_MINIMUMPRIORITY: ""

  # OpsGenie Output
  OPSGENIE_APIKEY: ""
  OPSGENIE_REGION: ""
  OPSGENIE_MINIMUMPRIORITY: ""
  OPSGENIE_MUTUALTLS: "ZmFsc2U="
  OPSGENIE_CHECKCERT: "dHJ1ZQ=="

  # Discord Output
  DISCORD_WEBHOOKURL: ""
  DISCORD_ICON: ""
  DISCORD_MINIMUMPRIORITY: ""

  # GCP Output
  GCP_CREDENTIALS: ""
  GCP_PUBSUB_PROJECTID: ""
  GCP_PUBSUB_TOPIC: ""
  GCP_PUBSUB_CUSTOMATTRIBUTES: ""
  GCP_PUBSUB_MINIMUMPRIORITY: ""
  GCP_STORAGE_BUCKET: ""
  GCP_STORAGE_PREFIX: ""
  GCP_STORAGE_MINIMUMPRIORITY: "ZGVidWc="
  GCP_CLOUDFUNCTIONS_NAME: ""
  GCP_CLOUDFUNCTIONS_MINIMUMPRIORITY: ""
  GCP_CLOUDRUN_ENDPOINT: ""
  GCP_CLOUDRUN_JWT: ""
  GCP_CLOUDRUN_MINIMUMPRIORITY: ""

  # GoogleChat Output
  GOOGLECHAT_WEBHOOKURL: ""
  GOOGLECHAT_OUTPUTFORMAT: "YWxs"
  GOOGLECHAT_MINIMUMPRIORITY: ""
  GOOGLECHAT_MESSAGEFORMAT: ""

  # ElasticSearch Output
  ELASTICSEARCH_HOSTPORT: ""
  ELASTICSEARCH_INDEX: "ZmFsY28="
  ELASTICSEARCH_TYPE: "X2RvYw=="
  ELASTICSEARCH_SUFFIX: "ZGFpbHk="
  ELASTICSEARCH_MINIMUMPRIORITY: ""
  ELASTICSEARCH_MUTUALTLS: "ZmFsc2U="
  ELASTICSEARCH_CHECKCERT: "dHJ1ZQ=="
  ELASTICSEARCH_USERNAME: ""
  ELASTICSEARCH_PASSWORD: ""
  ELASTICSEARCH_CUSTOMHEADERS: ""

  # Loki Output
  LOKI_HOSTPORT: ""
  LOKI_ENDPOINT: "L2xva2kvYXBpL3YxL3B1c2g="
  LOKI_USER: ""
  LOKI_APIKEY: ""
  LOKI_TENANT: ""
  LOKI_EXTRALABELS: ""
  LOKI_CUSTOMHEADERS: ""
  LOKI_MINIMUMPRIORITY: ""
  LOKI_MUTUALTLS: "ZmFsc2U="
  LOKI_CHECKCERT: "dHJ1ZQ=="

  # Prometheus Output
  PROMETHEUS_EXTRALABELS: ""

  # Nats Output
  NATS_HOSTPORT: ""
  NATS_MINIMUMPRIORITY: ""
  NATS_MUTUALTLS: "ZmFsc2U="
  NATS_CHECKCERT: "dHJ1ZQ=="

  # Stan Output
  STAN_HOSTPORT: ""
  STAN_CLUSTERID: ""
  STAN_CLIENTID: ""
  STAN_MINIMUMPRIORITY: ""
  STAN_MUTUALTLS: "ZmFsc2U="
  STAN_CHECKCERT: "dHJ1ZQ=="

  # Statsd
  STATSD_FORWARDER: ""
  STATSD_NAMESPACE: "ZmFsY29zaWRla2ljay4="

  # Dogstatsd
  DOGSTATSD_FORWARDER: ""
  DOGSTATSD_NAMESPACE: "ZmFsY29zaWRla2ljay4="
  DOGSTATSD_TAGS: ""

  # WebHook Output
  WEBHOOK_ADDRESS: ""
  WEBHOOK_METHOD: "UE9TVA=="
  WEBHOOK_CUSTOMHEADERS: ""
  WEBHOOK_MINIMUMPRIORITY: ""
  WEBHOOK_MUTUALTLS: "ZmFsc2U="
  WEBHOOK_CHECKCERT: "dHJ1ZQ=="

  # Azure Output
  AZURE_EVENTHUB_NAME: ""
  AZURE_EVENTHUB_NAMESPACE: ""
  AZURE_EVENTHUB_MINIMUMPRIORITY: ""

  # Kafka Output
  KAFKA_HOSTPORT: ""
  KAFKA_TOPIC: ""
  KAFKA_SASL: ""
  KAFKA_TLS: "ZmFsc2U="
  KAFKA_USERNAME: ""
  KAFKA_PASSWORD: ""
  KAFKA_ASYNC: "ZmFsc2U="
  KAFKA_REQUIREDACKS: "Tk9ORQ=="
  KAFKA_COMPRESSION: "Tk9ORQ=="
  KAFKA_BALANCER: "cm91bmRfcm9iaW4="
  KAFKA_TOPICCREATION: "ZmFsc2U="
  KAFKA_CLIENTID: ""
  KAFKA_MINIMUMPRIORITY: ""

  # PagerDuty Output
  PAGERDUTY_ROUTINGKEY: ""
  PAGERDUTY_REGION: "dXM="
  PAGERDUTY_MINIMUMPRIORITY: ""

  # Kubeless Output
  KUBELESS_FUNCTION: ""
  KUBELESS_NAMESPACE: ""
  KUBELESS_PORT: "ODA4MA=="
  KUBELESS_MINIMUMPRIORITY: ""
  KUBELESS_MUTUALTLS: "ZmFsc2U="
  KUBELESS_CHECKCERT: "dHJ1ZQ=="

  # OpenFaaS
  OPENFAAS_GATEWAYNAMESPACE: "b3BlbmZhYXM="
  OPENFAAS_GATEWAYSERVICE: "Z2F0ZXdheQ=="
  OPENFAAS_FUNCTIONNAME: ""
  OPENFAAS_FUNCTIONNAMESPACE: "b3BlbmZhYXMtZm4="
  OPENFAAS_GATEWAYPORT: "ODA4MA=="
  OPENFAAS_MINIMUMPRIORITY: ""
  OPENFAAS_MUTUALTLS: "ZmFsc2U="
  OPENFAAS_CHECKCERT: "dHJ1ZQ=="

  # Cloud Events Output
  CLOUDEVENTS_ADDRESS: ""
  CLOUDEVENTS_EXTENSION: ""
  CLOUDEVENTS_MINIMUMPRIORITY: ""

  # RabbitMQ Output
  RABBITMQ_URL: ""
  RABBITMQ_QUEUE: ""
  RABBITMQ_MINIMUMPRIORITY: "ZGVidWc="

  # Wavefront Output
  WAVEFRONT_ENDPOINTTYPE: ""
  WAVEFRONT_ENDPOINTHOST: ""
  WAVEFRONT_ENDPOINTTOKEN: ""
  WAVEFRONT_ENDPOINTMETRICPORT: "Mjg3OA=="
  WAVEFRONT_FLUSHINTERVALSECONDS: "MQ=="
  WAVEFRONT_BATCHSIZE: "MTAwMDA="
  WAVEFRONT_METRICNAME: "ZmFsY28uYWxlcnQ="
  WAVEFRONT_MINIMUMPRIORITY: "ZGVidWc="

  # Grafana Output
  GRAFANA_HOSTPORT: ""
  GRAFANA_APIKEY: ""
  GRAFANA_DASHBOARDID: ""
  GRAFANA_PANELID: ""
  GRAFANA_ALLFIELDSASTAGS: "ZmFsc2U="
  GRAFANA_CUSTOMHEADERS: ""
  GRAFANA_MUTUALTLS: "ZmFsc2U="
  GRAFANA_CHECKCERT: "dHJ1ZQ=="
  GRAFANA_MINIMUMPRIORITY: ""

  # Grafana On Call Output
  GRAFANAONCALL_WEBHOOKURL: ""
  GRAFANAONCALL_CUSTOMHEADERS: ""
  GRAFANAONCALL_CHECKCERT: "dHJ1ZQ=="
  GRAFANAONCALL_MUTUALTLS: "ZmFsc2U="
  GRAFANAONCALL_MINIMUMPRIORITY: ""

  # Fission Output
  FISSION_FUNCTION: ""
  FISSION_ROUTERNAMESPACE: "Zmlzc2lvbg=="
  FISSION_ROUTERSERVICE: "cm91dGVy"
  FISSION_ROUTERPORT: "ODA="
  FISSION_MINIMUMPRIORITY: ""
  FISSION_MUTUALTLS: "ZmFsc2U="
  FISSION_CHECKCERT: "dHJ1ZQ=="

  # Yandex Output
  YANDEX_ACCESSKEYID:  ""
  YANDEX_SECRETACCESSKEY: ""
  YANDEX_REGION: ""
  YANDEX_S3_ENDPOINT: ""
  YANDEX_S3_BUCKET: ""
  YANDEX_S3_PREFIX: ""
  YANDEX_S3_MINIMUMPRIORITY: ""
  YANDEX_DATASTREAMS_ENDPOINT: ""
  YANDEX_DATASTREAMS_STREAMNAME: ""
  YANDEX_DATASTREAMS_MINIMUMPRIORITY: ""

  # KafkaRest Output
  KAFKAREST_ADDRESS: ""
  KAFKAREST_VERSION: "Mg=="
  KAFKAREST_MINIMUMPRIORITY : ""
  KAFKAREST_MUTUALTLS : "ZmFsc2U="
  KAFKAREST_CHECKCERT : "dHJ1ZQ=="

  # Syslog
  SYSLOG_HOST: ""
  SYSLOG_PORT: ""
  SYSLOG_PROTOCOL: "dGNw"
  SYSLOG_FORMAT: "anNvbg=="
  SYSLOG_MINIMUMPRIORITY : ""

  # Zoho Cliq
  CLIQ_WEBHOOKURL: ""
  CLIQ_ICON: ""
  CLIQ_USEEMOJI: "dHJ1ZQ=="
  CLIQ_OUTPUTFORMAT: "YWxs"
  CLIQ_MESSAGEFORMAT: ""
  CLIQ_MINIMUMPRIORITY : ""

  # Policy Reporter
  POLICYREPORT_ENABLED: "ZmFsc2U="
  POLICYREPORT_KUBECONFIG: "fi8ua3ViZS9jb25maWc="
  POLICYREPORT_MAXEVENTS: "MTAwMA=="
  POLICYREPORT_PRUNEBYPRIORITY: "ZmFsc2U="
  POLICYREPORT_MINIMUMPRIORITY : ""

  # Node Red
  NODERED_ADDRESS: ""
  NODERED_USER: ""
  NODERED_PASSWORD: ""
  NODERED_CUSTOMHEADERS: ""
  NODERED_CHECKCERT : "dHJ1ZQ=="
  NODERED_MINIMUMPRIORITY : ""

  # MQTT
  MQTT_BROKER: ""
  MQTT_TOPIC: "ZmFsY28vZXZlbnRz"
  MQTT_QOS: "MA=="
  MQTT_RETAINED : "ZmFsc2U="
  MQTT_USER: ""
  MQTT_PASSWORD: ""
  MQTT_CHECKCERT : "dHJ1ZQ=="
  MQTT_MINIMUMPRIORITY : ""

  # Zincsearch
  ZINCSEARCH_HOSTPORT: ""
  ZINCSEARCH_INDEX: "ZmFsY28="
  ZINCSEARCH_USERNAME: ""
  ZINCSEARCH_PASSWORD: ""
  ZINCSEARCH_CHECKCERT : "dHJ1ZQ=="
  ZINCSEARCH_MINIMUMPRIORITY : ""

  # Gotify
  GOTIFY_HOSTPORT: ""
  GOTIFY_TOKEN: ""
  GOTIFY_FORMAT: "bWFya2Rvd24="
  GOTIFY_CHECKCERT : "dHJ1ZQ=="
  GOTIFY_MINIMUMPRIORITY : ""

  # Tekton
  TEKTON_EVENTLISTENER: ""
  TEKTON_CHECKCERT : "dHJ1ZQ=="
  TEKTON_MINIMUMPRIORITY : ""

  # Spyderbat
  SPYDERBAT_ORGUID: ""
  SPYDERBAT_APIKEY: ""
  SPYDERBAT_APIURL: "aHR0cHM6Ly9hcGkuc3B5ZGVyYmF0LmNvbQ=="
  SPYDERBAT_SOURCE: "ZmFsY29zaWRla2ljaw=="
  SPYDERBAT_SOURCEDESCRIPTION: ""
  SPYDERBAT_MINIMUMPRIORITY : ""

  # TimescaleDB
  TIMESCALEDB_HOST: ""
  TIMESCALEDB_PORT: "NTQzMg=="
  TIMESCALEDB_USER: "cG9zdGdyZXM="
  TIMESCALEDB_PASSWORD: "cG9zdGdyZXM="
  TIMESCALEDB_DATABASE: ""
  TIMESCALEDB_HYPERTABLENAME: "ZmFsY29fZXZlbnRz"
  TIMESCALEDB_MINIMUMPRIORITY : ""

  # Redis Output
  REDIS_ADDRESS: ""
  REDIS_PASSWORD: ""
  REDIS_DATABASE: "MA=="
  REDIS_KEY: "ZmFsY28="
  REDIS_STORAGETYPE: "bGlzdA=="
  REDIS_MINIMUMPRIORITY : ""

  # TELEGRAM Output
  TELEGRAM_TOKEN: ""
  TELEGRAM_CHATID: ""
  TELEGRAM_MINIMUMPRIORITY : ""
  TELEGRAM_CHECKCERT : "dHJ1ZQ=="

  # N8N Output
  N8N_ADDRESS: ""
  N8N_USER: ""
  N8N_PASSWORD: ""
  N8N_MINIMUMPRIORITY : ""
  N8N_CHECKCERT : "dHJ1ZQ=="

  # Open Observe Output
  OPENOBSERVE_HOSTPORT: ""
  OPENOBSERVE_USERNAME: ""
  OPENOBSERVE_PASSWORD: ""
  OPENOBSERVE_CHECKCERT : "dHJ1ZQ=="
  OPENOBSERVE_MUTUALTLS : "ZmFsc2U="
  OPENOBSERVE_CUSTOMHEADERS : ""
  OPENOBSERVE_ORGANIZATIONNAME: "ZGVmYXVsdA=="
  OPENOBSERVE_STREAMNAME: "ZmFsY28="
  OPENOBSERVE_MINIMUMPRIORITY : ""

  # WebUI Output
  WEBUI_URL: "aHR0cDovL2ZhbGNvLWZhbGNvc2lkZWtpY2stdWk6MjgwMg=="
---
# Source: falco/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: falco
  namespace: falco
  labels:
    helm.sh/chart: falco-3.6.0
    app.kubernetes.io/name: falco
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "0.35.1"
    app.kubernetes.io/managed-by: Helm
data:
  falco.yaml: |-
    base_syscalls:
      custom_set: []
      repair: false
    buffered_outputs: false
    file_output:
      enabled: false
      filename: ./events.txt
      keep_alive: false
    grpc:
      bind_address: unix:///run/falco/falco.sock
      enabled: true
      threadiness: 0
    grpc_output:
      enabled: true
    http_output:
      ca_bundle: ""
      ca_cert: ""
      ca_path: /etc/ssl/certs
      enabled: true
      insecure: true
      url: http://falco-ui-server.kubeops.svc.cluster.local:8080/falcoevents
      user_agent: falcosecurity/falco
    json_include_output_property: true
    json_include_tags_property: true
    json_output: true
    libs_logger:
      enabled: false
      severity: debug
    load_plugins: []
    log_level: info
    log_stderr: true
    log_syslog: true
    metadata_download:
      chunk_wait_us: 1000
      max_mb: 100
      watch_freq_sec: 1
    metrics:
      convert_memory_to_mb: true
      enabled: false
      include_empty_values: false
      interval: 1h
      kernel_event_counters_enabled: true
      libbpf_stats_enabled: true
      output_rule: true
      resource_utilization_enabled: true
    modern_bpf:
      cpus_for_each_syscall_buffer: 1
    output_timeout: 2000
    outputs:
      max_burst: 1000
      rate: 0
    plugins:
    - init_config: null
      library_path: libk8saudit.so
      name: k8saudit
      open_params: http://:9765/k8s-audit
    - library_path: libcloudtrail.so
      name: cloudtrail
    - init_config: ""
      library_path: libjson.so
      name: json
    priority: debug
    program_output:
      enabled: false
      keep_alive: false
      program: 'jq ''{text: .output}'' | curl -d @- -X POST https://hooks.slack.com/services/XXX'
    rules_file:
    - /etc/falco/falco_rules.yaml
    - /etc/falco/falco_rules.local.yaml
    - /etc/falco/rules.d
    stdout_output:
      enabled: true
    syscall_buf_size_preset: 4
    syscall_drop_failed_exit: false
    syscall_event_drops:
      actions:
      - log
      - alert
      max_burst: 1
      rate: 0.03333
      simulate_drops: false
      threshold: 0.1
    syscall_event_timeouts:
      max_consecutives: 1000
    syslog_output:
      enabled: true
    time_format_iso_8601: false
    watch_config_files: true
    webserver:
      enabled: true
      k8s_healthz_endpoint: /healthz
      listen_port: 8765
      ssl_certificate: /etc/falco/falco.pem
      ssl_enabled: false
      threadiness: 0
---
# Source: falco/templates/falcoctl-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: falco-falcoctl
  namespace: falco
  labels:
    helm.sh/chart: falco-3.6.0
    app.kubernetes.io/name: falco
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "0.35.1"
    app.kubernetes.io/managed-by: Helm
data:
  falcoctl.yaml: |-
    artifact:
      allowedTypes:
      - rulesfile
      follow:
        every: 6h
        falcoversions: http://localhost:8765/versions
        pluginsDir: /plugins
        refs:
        - falco-rules:1
        rulesfilesDir: /rulesfiles
      install:
        pluginsDir: /plugins
        refs:
        - falco-rules:1
        resolveDeps: false
        rulesfilesDir: /rulesfiles
    indexes:
    - name: falcosecurity
      url: https://falcosecurity.github.io/falcoctl/index.yaml
---
# Source: falco/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: falco
  labels:
    helm.sh/chart: falco-3.6.0
    app.kubernetes.io/name: falco
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "0.35.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - extensions
      - ""
    resources:
      - nodes
      - namespaces
      - pods
      - replicationcontrollers
      - replicasets
      - services
      - daemonsets
      - deployments
      - events
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
      - replicasets
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - nonResourceURLs:
      - /healthz
      - /healthz/*
    verbs:
      - get
---
# Source: falco/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: falco
  labels:
    helm.sh/chart: falco-3.6.0
    app.kubernetes.io/name: falco
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "0.35.1"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: falco
    namespace: falco
roleRef:
  kind: ClusterRole
  name: falco
  apiGroup: rbac.authorization.k8s.io
---
# Source: falco/charts/falcosidekick/templates/rbac-ui.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: falco-falcosidekick-ui
  namespace: falco
  labels:
    app.kubernetes.io/name: falcosidekick-ui
    helm.sh/chart: falcosidekick-0.6.3
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
rules: []
---
# Source: falco/charts/falcosidekick/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: falco-falcosidekick
  namespace: falco
  labels:
    app.kubernetes.io/name: falcosidekick
    helm.sh/chart: falcosidekick-0.6.3
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
    - ""
  resources:
    - endpoints
  verbs:
    - get
---
# Source: falco/charts/falcosidekick/templates/rbac-ui.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: falco-falcosidekick-ui
  namespace: falco
  labels:
    app.kubernetes.io/name: falcosidekick-ui
    helm.sh/chart: falcosidekick-0.6.3
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: falco-falcosidekick-ui
subjects:
- kind: ServiceAccount
  name: falco-falcosidekick-ui
---
# Source: falco/charts/falcosidekick/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: falco-falcosidekick
  namespace: falco
  labels:
    app.kubernetes.io/name: falcosidekick
    helm.sh/chart: falcosidekick-0.6.3
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: falco-falcosidekick
subjects:
- kind: ServiceAccount
  name: falco-falcosidekick
---
# Source: falco/charts/falcosidekick/templates/service-ui.yaml
apiVersion: v1
kind: Service
metadata:
  name: falco-falcosidekick-ui
  namespace: falco
  labels:
    app.kubernetes.io/name: falcosidekick-ui
    helm.sh/chart: falcosidekick-0.6.3
    app.kubernetes.io/instance: falco-ui
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 2802
         
      targetPort: 2802
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: falcosidekick-ui
    app.kubernetes.io/instance: falco-ui
---
# Source: falco/charts/falcosidekick/templates/service-ui.yaml
apiVersion: v1
kind: Service
metadata:
  name: falco-falcosidekick-ui-redis
  namespace: falco
  labels:
    app.kubernetes.io/name: falcosidekick-ui-redis
    helm.sh/chart: falcosidekick-0.6.3
    app.kubernetes.io/instance: falco-ui
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 6379
      targetPort: 6379
      protocol: TCP
      name: redis
  selector:
    app.kubernetes.io/name: falcosidekick-ui-redis
    app.kubernetes.io/instance: falco-ui-redis
---
# Source: falco/charts/falcosidekick/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: falco-falcosidekick
  namespace: falco
  labels:
    app.kubernetes.io/name: falcosidekick
    helm.sh/chart: falcosidekick-0.6.3
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 2801
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/instance: falco
---
# Source: falco/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: falco
  namespace: falco
  labels:
    helm.sh/chart: falco-3.6.0
    app.kubernetes.io/name: falco
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "0.35.1"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: falco
      app.kubernetes.io/instance: falco
  template:
    metadata:
      name: falco
      labels:
        app.kubernetes.io/name: falco
        app.kubernetes.io/instance: falco
      annotations:
        checksum/config: b6248b2d428a2ade20ece0c54c76313403a95265453f312d29b30aaa9c678142
        checksum/rules: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        checksum/certs: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    spec:
      serviceAccountName: falco
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
      containers:
        - name: falco
          image: docker.io/falcosecurity/falco-no-driver:0.35.1
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 1000m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            capabilities:
              add:
              - BPF
              - SYS_RESOURCE
              - PERFMON
              - SYS_PTRACE
          args:
            - /usr/bin/falco
            - --modern-bpf        
            - --cri
            - /run/containerd/containerd.sock
            - --cri
            - /run/crio/crio.sock
            - -K
            - /var/run/secrets/kubernetes.io/serviceaccount/token
            - -k
            - https://$(KUBERNETES_SERVICE_HOST)
            - --k8s-node
            - "$(FALCO_K8S_NODE_NAME)"
            - -pk
          env:
            - name: FALCO_K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          tty: true
          livenessProbe:
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 15
            httpGet:
              path: /healthz
              port: 8765
          readinessProbe:
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 15
            httpGet:
              path: /healthz
              port: 8765
          volumeMounts:
            - mountPath: /etc/falco
              name: rulesfiles-install-dir
            - mountPath: /root/.falco
              name: root-falco-fs
            - mountPath: /host/proc
              name: proc-fs
            - mountPath: /host/var/run/docker.sock
              name: docker-socket
            - mountPath: /host/run/containerd/containerd.sock
              name: containerd-socket
            - mountPath: /host/run/crio/crio.sock
              name: crio-socket
            - mountPath: /etc/falco/falco.yaml
              name: falco-yaml
              subPath: falco.yaml
            
            - mountPath: /run/falco
              name: grpc-socket-dir
        - name: falcoctl-artifact-follow
          image: docker.io/falcosecurity/falcoctl:0.5.1
          imagePullPolicy: IfNotPresent
          args:
            - artifact
            - follow
            - --verbose
          securityContext:
          volumeMounts:
            - mountPath: /plugins
              name: plugins-install-dir
            - mountPath: /rulesfiles
              name: rulesfiles-install-dir
            - mountPath: /etc/falcoctl
              name: falcoctl-config-volume
          env:
      initContainers:
        - name: falcoctl-artifact-install
          image: docker.io/falcosecurity/falcoctl:0.5.1
          imagePullPolicy: IfNotPresent
          args: 
            - artifact
            - install
            - --verbose
          securityContext:
          volumeMounts:
            - mountPath: /plugins
              name: plugins-install-dir
            - mountPath: /rulesfiles
              name: rulesfiles-install-dir
            - mountPath: /etc/falcoctl
              name: falcoctl-config-volume
          env:
      volumes:
        - name: plugins-install-dir
          emptyDir: {}
        - name: rulesfiles-install-dir
          emptyDir: {}
        - name: root-falco-fs
          emptyDir: {}  
        - name: boot-fs
          hostPath:
            path: /boot
        - name: lib-modules
          hostPath:
            path: /lib/modules
        - name: usr-fs
          hostPath:
            path: /usr
        - name: etc-fs
          hostPath:
            path: /etc
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: containerd-socket
          hostPath:
            path: /run/containerd/containerd.sock
        - name: crio-socket
          hostPath:
            path: /run/crio/crio.sock
        - name: proc-fs
          hostPath:
            path: /proc
        - name: falcoctl-config-volume
          configMap: 
            name: falco-falcoctl
            items:
              - key: falcoctl.yaml
                path: falcoctl.yaml
        - name: falco-yaml
          configMap:
            name: falco
            items:
            - key: falco.yaml
              path: falco.yaml
        
        - name: grpc-socket-dir
          hostPath:
            path: /run/falco
  updateStrategy:
    type: RollingUpdate
---
# Source: falco/charts/falcosidekick/templates/deployment-ui.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: falco-falcosidekick-ui
  namespace: falco
  labels:
    app.kubernetes.io/name: falcosidekick-ui
    helm.sh/chart: falcosidekick-0.6.3
    app.kubernetes.io/instance: falco-ui
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: falcosidekick-ui
      app.kubernetes.io/instance: falco-ui
  template:
    metadata:
      labels:
        app.kubernetes.io/name: falcosidekick-ui
        app.kubernetes.io/instance: falco-ui
    spec:
      serviceAccountName: falco-falcosidekick-ui
      securityContext:
        fsGroup: 1234
        runAsUser: 1234
      containers:
        - name: falcosidekick-ui
          image: "docker.io/falcosecurity/falcosidekick-ui:v2.1.0"
          imagePullPolicy: IfNotPresent
          args:
            - "-r"
            - falco-falcosidekick-ui-redis:6379
            - "-l"
            - info
            - "-u"
            - admin:admin
          ports:
            - name: http
              containerPort: 2802
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/v1/healthz
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /api/v1/healthz
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
            {}
---
# Source: falco/charts/falcosidekick/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: falco-falcosidekick
  namespace: falco
  labels:
    app.kubernetes.io/name: falcosidekick
    helm.sh/chart: falcosidekick-0.6.3
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: falcosidekick
      app.kubernetes.io/instance: falco
  template:
    metadata:
      labels:
        app.kubernetes.io/name: falcosidekick
        app.kubernetes.io/instance: falco
      annotations:
        checksum/config: 2405aba1605916c683cbc39554d30decfa94a9908baef4f544befa9d60251069
    spec:
      serviceAccountName: falco-falcosidekick
      securityContext:
        fsGroup: 1234
        runAsUser: 1234
      containers:
        - name: falcosidekick
          image: "docker.io/falcosecurity/falcosidekick:2.28.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 2801
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
          envFrom:
            - secretRef:
                name: falco-falcosidekick
          env:
            - name: DEBUG
              value: "false"
            - name: CUSTOMFIELDS
              value: ""
            - name: TEMPLATEDFIELDS
              value: ""
            - name: BRACKETREPLACER
              value: ""
            - name: MUTUALTLSFILESPATH
              value: "/etc/certs"
            - name: MUTUALTLSCLIENT_CERTFILE
              value: ""
            - name: MUTUALTLSCLIENT_KEYFILE
              value: ""
            - name: MUTUALTLSCLIENT_CACERTFILE
              value: ""
            - name: TLSSERVER_DEPLOY
              value: "false"
            - name: TLSSERVER_CERTFILE
              value: "/etc/certs/server/server.crt"
            - name: TLSSERVER_KEYFILE
              value: "/etc/certs/server/server.key"
            - name: TLSSERVER_CACERTFILE
              value: "/etc/certs/server/ca.crt"
            - name: TLSSERVER_MUTUALTLS
              value: "false"
            - name: TLSSERVER_NOTLSPORT
              value: "2810"
            - name: TLSSERVER_NOTLSPATHS
              value: ""
          resources:
            {}
---
# Source: falco/charts/falcosidekick/templates/deployment-ui.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: falco-falcosidekick-ui-redis
  namespace: falco
  labels:
    app.kubernetes.io/name: falcosidekick-ui-redis
    helm.sh/chart: falcosidekick-0.6.3
    app.kubernetes.io/instance: falco-ui
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  serviceName: falco-falcosidekick-ui-redis
  selector:
    matchLabels:
      app.kubernetes.io/name: falcosidekick-ui-redis
      app.kubernetes.io/instance: falco-ui-redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: falcosidekick-ui-redis
        app.kubernetes.io/instance: falco-ui-redis
    spec:
      serviceAccountName: falco-falcosidekick-ui
      containers:
        - name: redis
          image: "docker.io/redis/redis-stack:6.2.6-v3"
          imagePullPolicy: IfNotPresent
          args: []
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
          - name: falco-falcosidekick-ui-redis-data
            mountPath: /data
          resources:
            {}
  volumeClaimTemplates:
    - metadata:
        name: falco-falcosidekick-ui-redis-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
---
# Source: falco/charts/falcosidekick/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "falco-falcosidekick-test-connection"
  namespace: falco
  labels:
    app.kubernetes.io/name: falcosidekick
    helm.sh/chart: falcosidekick-0.6.3
    app.kubernetes.io/instance: falco
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: curl
      image: appropriate/curl
      command: ['curl']
      args:  ["-X", "POST", 'falco-falcosidekick:2801/ping']
  restartPolicy: Never
